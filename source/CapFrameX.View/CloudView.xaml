<UserControl x:Class="CapFrameX.View.CloudView"
             x:Name="CloudViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:prism="http://prismlibrary.com/"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:proxy="clr-namespace:CapFrameX.MVVM;assembly=CapFrameX.MVVM"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:local="clr-namespace:CapFrameX.View"
			 xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignBackground}"
			 prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Hidden" TrueValue="Visible"/>
            <mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" FalseValue="Visible" TrueValue="Hidden"/>
			<mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
		</ResourceDictionary>
	</UserControl.Resources>
    <Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="50"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="50"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="545"/>
			<ColumnDefinition Width="10"/>
			<ColumnDefinition Width="395"/>
			<ColumnDefinition Width="1*"/>
		</Grid.ColumnDefinitions>
        <!--Record upload-->
		<TextBlock Grid.Row="0" Grid.Column="1" Margin="0 25 0 0" HorizontalAlignment="Center" Text="Record upload" FontSize="16"
                   Foreground="{DynamicResource MaterialDesignBody}"/>

        <Grid Grid.Row="1" Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="450" x:Name="DragAndDropInfoTextTextBlock"
                   TextAlignment="Center" TextWrapping="Wrap" FontSize="17" Visibility="{Binding ShowHelpText, Converter={StaticResource TrueToVisibleConverter}}"  Grid.ZIndex="1"                     
                   Text="拖拽项目到这里或者双击添加" Foreground="{DynamicResource MaterialDesignBody}"
				   dragdrop:DragDrop.IsDragSource="False"
				   dragdrop:DragDrop.IsDropTarget="True"
				   dragdrop:DragDrop.DropHandler="{Binding}"
				   dragdrop:DragDrop.UseDefaultDragAdorner="True"
				   dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
				   dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"/>
            <DataGrid Grid.Row="0" Grid.Column="1" x:Name="CloudItemDataGrid" Height="275" Width="545" FontSize="11"
					    MouseLeave="CloudItemDataGrid_MouseLeave" SelectionMode="Single"
					    SelectedIndex="{Binding SelectedCloudEntryIndex}" ItemsSource="{Binding CloudEntries}"
					    CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" PreviewKeyDown="CloudItemDataGrid_PreviewKeyDown"
					    materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					    ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
					    dragdrop:DragDrop.IsDragSource="False"
					    dragdrop:DragDrop.IsDropTarget="True"
					    dragdrop:DragDrop.DropHandler="{Binding}"
					    dragdrop:DragDrop.UseDefaultDragAdorner="True"
					    dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
					    dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"
                      Background="{DynamicResource MaterialDesignTextFieldBoxBackground}"
                      Style="{StaticResource MaterialDesignDataGrid}">
                <DataGrid.Resources>
                    <proxy:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding GameName, Mode=OneWay}"
                                            Header="Game"
											Width="Auto"
                                            IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding CreationDate, Mode=OneWay}"
                                            Header="Date"
											Width="Auto"
                                            IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding CreationTime, Mode=OneWay}"
                                            Header="Time"
											Width="Auto"
                                            IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding Comment, Mode=OneWay}"
                                            Header="Comment"
											Width="Auto"
                                            IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="5"  Width="40" Height="40"
                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}" BorderBrush="Transparent" Background="{DynamicResource MaterialDesignToolBackground}"
					Command="{Binding ClearTableCommand}" IsEnabled="{Binding EnableClearAndUploadButton}"
                    ToolTip="清空项目">
                <materialDesign:PackIcon Kind="PlaylistRemove" Height="24" Width="24" />
            </Button>
            <TextBox Grid.Row="1" Width="350" wpf:HintAssist.Hint="Download link / ID" materialDesign:HintAssist.HintOpacity=".8" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="50 0 0 0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="{Binding ShareUrl, Mode=OneWay}" PreviewMouseDoubleClick="ShareUrlFocusHandler" IsReadOnly="True" 
                     Visibility="{Binding ShareUrlVisible, Converter={StaticResource TrueToVisibleConverter}}" Foreground="{DynamicResource MaterialDesignBody}"/>
            <TextBlock Grid.Row="1" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="上传中..." Foreground="{DynamicResource MaterialDesignBody}"
                       Visibility="{Binding ShowUploadInfo, Converter={StaticResource TrueToVisibleConverter}}"/>
            <TextBox Name="UploadDescription"  Grid.Row="1" Margin="50 0 0 0" FontSize="16" Width="350" wpf:HintAssist.Hint="(Optional) Upload description" HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Text="{Binding UploadDescription, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ShowUploadDescriptionTextBox, Converter={StaticResource TrueToVisibleConverter}}"
                     Foreground="{DynamicResource MaterialDesignBody}"/>
            <Button Grid.Row="1" Grid.Column="2" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="45" BorderBrush="Transparent" Background="{DynamicResource MaterialDesignToolBackground}"
					Command="{Binding UploadRecordsCommand}" IsEnabled="{Binding EnableClearAndUploadButton}" Visibility="{Binding ShareUrlVisible, Converter={StaticResource FalseToVisibleConverter}}"
                    ToolTipService.ShowDuration="25000">
				<TextBlock Text="Upload records" TextWrapping="Wrap" Foreground="White"  TextAlignment="Center"/>
				<Button.ToolTip>
					<ToolTip MaxWidth="200">
						<TextBlock
                             Text="将您的记录上传到我们的服务器，并获得共享记录的 ID" 
                             TextWrapping="Wrap"/>
					</ToolTip>
				</Button.ToolTip>
			</Button>
            <Button Grid.Row="1" Grid.Column="2" Margin="5" VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="45" BorderBrush="Transparent"
					Command="{Binding CopyURLCommand}" Visibility="{Binding ShareUrlVisible, Converter={StaticResource TrueToVisibleConverter}}">
                <TextBlock Text="复制到剪贴板" TextWrapping="Wrap" Foreground="White" TextAlignment="Center"
                        FontFamily="{StaticResource SarasaFont}"/>
            </Button>
        </Grid>
        <!--Record download-->
        <TextBlock Grid.Row="2" Grid.Column="1" Margin="0 25 0 0" HorizontalAlignment="Center" Text="记录下载" FontSize="16" Foreground="{DynamicResource MaterialDesignBody}"/>
        <Grid Grid.Row="3" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>
            <TextBox Name="IDBox" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Width="400" HorizontalAlignment="Left" wpf:HintAssist.Hint="Download link / ID" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="5 0 0 10" FontSize="14" Text="{Binding DownloadIDString, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.HintOpacity=".8" Foreground="{DynamicResource MaterialDesignBody}">
            </TextBox>
            <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Width="380" wpf:HintAssist.Hint="Download Folder" materialDesign:HintAssist.HintOpacity=".8" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="5 0 0 0" IsReadOnly="True" FontSize="14" HorizontalAlignment="Left" Text="{Binding CloudDownloadDirectory, Mode=OneWay}" PreviewMouseDown="DownloadFolder_PreviewMouseDown"
                     Foreground="{DynamicResource MaterialDesignBody}">
            </TextBox>
            <Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0 20 10 0" Height="25" Width="25" Command="{Binding SwitchToDownloadDirectoryCommand}" BorderBrush="Transparent"
                    Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Observe download folder">
                <materialDesign:PackIcon Kind="Search" Height="20" Width="20" />
            </Button>
            <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Foreground="White" Margin="5 0 5 5" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100" Height="45"
					Command="{Binding DownloadRecordsCommand}" IsEnabled="{Binding EnableDownloadButton}" BorderBrush="Transparent" Background="{DynamicResource MaterialDesignToolBackground}"
                    ToolTipService.ShowDuration="25000">
                <TextBlock Text="下载记录" TextWrapping="Wrap" TextAlignment="Center"/>
                <Button.ToolTip>
                    <ToolTip MaxWidth="200">
                        <TextBlock
                             Text="将与下载 ID 绑定的记录下载到指定的下载文件夹中" 
                             TextWrapping="Wrap"/>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <TextBlock Grid.Row="1" Grid.Column="2" Padding="15 30 0 0" FontSize="16" FontWeight="Bold" Text="下载中..."  Visibility="{Binding ShowDownloadInfo, Converter={StaticResource TrueToVisibleConverter}}"
                       Foreground="{DynamicResource MaterialDesignBody}"/>
		</Grid>
		<TextBlock Grid.Row="0" Grid.Column="3" Margin="0 25 0 0" HorizontalAlignment="Center" Text="进程列表选项" FontSize="16"
                   Foreground="{DynamicResource MaterialDesignBody}"/>
		<!--Grid lists upload/download-->
		<Grid Grid.Row="1" Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Expander Grid.Row="0" Grid.ColumnSpan="2" ExpandDirection="Down" HorizontalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignBackground}">
                <Expander.Header>
                    <TextBlock Margin="50 0 0 0" HorizontalAlignment="Center" FontWeight="Bold" Text="什么是进程列表？" RenderTransformOrigin=".5,.5">
                    </TextBlock>
                </Expander.Header>
                <TextBlock  Margin="0 10 0 20" Width="375" TextWrapping="Wrap" TextAlignment="Center"
                       Text="进程列表包含 CapFrameX 已知的所有进程。&#10;
                            &#10;它保存有关显示的进程名称以及该进程是否被捕获服务接收的信息。&#10;
                            &#10;首次启动时，我们会创建并更新您自己的进程列表，该列表来自我们随每个新版本 CapFrameX 提供的默认列表，其中已包含许多具有正确名称的游戏进程和其他应忽略的进程。&#10;
							&#10;下面的选项可以帮助我们为默认列表获取更多条目，也可以直接为您提供最新添加的条目。" />
            </Expander>
            <CheckBox Grid.Row="1" Grid.Column="0"  Width="125" IsChecked="{Binding ShareProcessListEntries}" ToolTipService.ShowDuration="25000">
                <CheckBox.ToolTip>
                    <ToolTip StaysOpen="True" MaxWidth="275">
                        <TextBlock
                             Text="您添加的任何新游戏名称或忽略的程序都将发送给我们，以便我们将其添加到自己的列表中" 
                                  TextWrapping="Wrap"/>
                    </ToolTip>
                </CheckBox.ToolTip>
                <TextBlock Padding="5 0 0 0" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource MaterialDesignBody}">
  					     分享新的条目
                </TextBlock>
            </CheckBox>
            <CheckBox Grid.Row="1" Grid.Column="1"  Width="125" IsChecked="{Binding AutoUpdateProcessList}" ToolTipService.ShowDuration="25000">
                <CheckBox.ToolTip>
                    <ToolTip StaysOpen="True" MaxWidth="275">
                        <TextBlock TextWrapping="Wrap"
                             Text="启动时，您自己的流程列表将与我们的在线列表进行比较，您列表中没有的内容都将添加进来。
									&#10;
									&#10;这不会影响已在列表中的任何进程的忽略/未忽略状态或自定义游戏名称"/>
                    </ToolTip>
                </CheckBox.ToolTip>
                <TextBlock Padding="5 0 0 0" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource MaterialDesignBody}">
  					     自动更新列表
                </TextBlock>
            </CheckBox>
        </Grid>
	</Grid>
</UserControl>
